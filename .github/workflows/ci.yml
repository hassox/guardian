name: Continuous Integration

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - master

jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      elixir: ${{ steps.set-matrix.outputs.elixir }}
    steps:
      - id: set-matrix
        run: |
          elixir_matrix=""
          elixir_matrix+=$(echo -n '"{include":[')
          elixir_matrix+=$(echo -n '{"elixir":"1.10.4","otp":"23.0"},g')
          elixir_matrix+=$(echo -n '{"elixir":"1.17.0","otp":"27.0"}')
          elixir_matrix+=$(echo -n ']}')
          echo "elixir=$elixir_matrix" >> $GITHUB_OUTPUT

  job2:
    needs: job1
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.job1.outputs.elixir) }}
    name: Elixir ${{ matrix.elixir }} with OTP ${{ matrix.otp }}
    steps:
      - run: echo "Matrix - Elixir ${{ matrix.elixir }}, OTP ${{ matrix.otp }}"

  # VersionMatrix:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     elixir: ${{ steps.set-matrix.outputs.elixir }}
  #   steps:
  #     - name: Set
  #       id: set-matrix
  #       run: echo 'elixir=[{"version":"1.10.4","otp":"23.0"},{"version":"1.11.2","otp":"23.0"}]' >> "$GITHUB_OUTPUT"

  # TestingMatrix:
  #   runs-on: ubuntu-latest
  #   needs: VersionMatrix
  #   strategy:
  #     matrix: ${{ fromJson(needs.VersionMatrix.outputs.elixir) }}
  #   # name: Elixir ${{ matrix.version }} with OTP ${{ matrix.otp }}
  #   steps:
  #     - name: echo
  #       env:
  #         MATRIX: ${{ needs.VersionMatrix.outputs.elixir }}
  #       # run: echo "${{ matrix.otp }} ${{ matrix.version }}"
  #       run: echo $MATRIX

  Test:
    runs-on: ubuntu-latest
    env:
      MIX_ENV: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1

      - name: Set up Elixir
        id: beam
        uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict

      - name: Install Dependencies
        uses: erlef/gh-actions/preview/mix-deps-get@main
        with:
          elixir-version: ${{ steps.beam.outputs.elixir-version }}
          erlang-version: ${{ steps.beam.outputs.otp-version }}

      - name: Update SSL Verify Fun
        run: |
          mix deps.update ssl_verify_fun

      - name: Run Tests
        run: mix test

  Linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1

      - name: Set up Elixir
        id: beam
        uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict

      - name: Install Dependencies
        uses: erlef/gh-actions/preview/mix-deps-get@main
        with:
          elixir-version: ${{ steps.beam.outputs.elixir-version }}
          erlang-version: ${{ steps.beam.outputs.otp-version }}

      - name: Run Formatter
        run: mix format --check-formatted

      - name: Run Credo
        run: mix credo
